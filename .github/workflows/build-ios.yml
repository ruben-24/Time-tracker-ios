name: Build iOS App

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-ios:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4 # FIX SINTAXĂ: S-a folosit "/" în loc de ":"
        with:
          node-version: 20

      - name: Install Node Dependencies
        run: |
          # 1. Instalează dependențele din package.json
          npm install
          
          # 2. Instalează pachetul nativ iOS (FIX PLATFORMĂ)
          npm install @capacitor/ios
          
          # SFAT: Dacă eroarea ERESOLVE persistă din cauza conflictului de versiuni
          # între @capacitor/core (v5) și @capacitor/ios (v7), folosește:
          # npm install --legacy-peer-deps
          
      - name: Build web app
        run: npm run build

      - name: Prepare Capacitor iOS Project
        run: |
          # Adaugă platforma iOS (dacă nu e prezentă)
          npx cap add ios
          # Copiază fișierele web în proiectul nativ
          npx cap copy ios
          
      - name: Install CocoaPods and Dependencies
        run: |
          sudo gem install cocoapods 
          
          # FIX WORKSPACE: Navighează în directorul 'ios'
          cd ios
          
          # Rulează pod install pentru a genera App.xcworkspace
          pod install

      - name: Build iOS app (archive, unsigned)
        run: |
          # Intră în directorul iOS
          cd ios 
          
          # Folosește App.xcworkspace
          xcodebuild -workspace App.xcworkspace \
            -scheme App \
            -sdk iphoneos \
            -configuration Release \
            CODE_SIGNING_ALLOWED=NO \
            CODE_SIGN_IDENTITY="" \
            clean archive \
            -archivePath $PWD/build/App.xcarchive

      - name: Export .ipa (unsigned)
        run: |
          # Rămâi în directorul 'ios'
          mkdir -p build/ipa
          xcodebuild -exportArchive \
            -archivePath build/App.xcarchive \
            -exportPath build/ipa \
            -exportOptionsPlist <(echo '<?xml version="1.0" encoding="UTF-8"?><plist version="1.0"><dict><key>method</key><string>development</string></dict></plist>')
          ls -l build/ipa

      - name: Upload .ipa artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: ios/build/ipa
